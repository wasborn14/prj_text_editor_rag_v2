export const DUMMY_MARKDOWN = `# Markdownエディタ テスト

## 表のテスト

### シンプルな表

| 名前 | 年齢 | 職業 |
|------|------|------|
| 太郎 | 25 | エンジニア |
| 花子 | 30 | デザイナー |
| 次郎 | 28 | プロダクトマネージャー |

### 複雑な表

| ID | プロジェクト名 | ステータス | 担当者 | 期限 |
|----|--------------|----------|--------|------|
| 1 | WebアプリA | 進行中 | 田中 | 2024-12-31 |
| 2 | モバイルアプリB | 完了 | 佐藤 | 2024-11-30 |
| 3 | API開発C | 計画中 | 鈴木 | 2025-01-15 |
| 4 | インフラ構築D | 進行中 | 高橋 | 2024-12-15 |

## TypeScriptコード

\`\`\`typescript
interface Repository {
  id: number
  name: string
  full_name: string
}

function getRepository(id: number): Repository {
  return {
    id,
    name: "test-repo",
    full_name: "user/test-repo"
  }
}
\`\`\`

## JavaScriptコード

\`\`\`javascript
const users = [
  { name: "Alice", age: 25 },
  { name: "Bob", age: 30 }
]

users.forEach(user => {
  console.log(\`\${user.name} is \${user.age} years old\`)
})
\`\`\`

## Mermaidダイアグラム

### フローチャート

\`\`\`mermaid
graph TD
    A[開始] --> B{ユーザー認証}
    B -->|認証成功| C[メニュー表示]
    B -->|認証失敗| D[エラー表示]
    C --> E{操作選択}
    E -->|新規作成| F[データ入力フォーム]
    E -->|編集| G[既存データ取得]
    E -->|削除| H[削除確認ダイアログ]
    F --> I[バリデーション]
    I -->|OK| J[データ保存]
    I -->|NG| K[エラーメッセージ]
    K --> F
    G --> L[編集フォーム表示]
    L --> M[更新バリデーション]
    M -->|OK| N[データ更新]
    M -->|NG| O[エラーメッセージ]
    O --> L
    H -->|確認| P[データ削除実行]
    H -->|キャンセル| C
    J --> Q[成功メッセージ]
    N --> Q
    P --> Q
    Q --> C
    D --> R[再ログイン]
    R --> A
\`\`\`

### シーケンス図

\`\`\`mermaid
sequenceDiagram
    participant ユーザー
    participant ブラウザ
    participant フロントエンド
    participant APIゲートウェイ
    participant 認証サービス
    participant ユーザーサービス
    participant データベース
    participant キャッシュ
    participant ログサービス
    participant 通知サービス

    ユーザー->>ブラウザ: ログインページアクセス
    ブラウザ->>フロントエンド: ページリクエスト
    フロントエンド-->>ブラウザ: HTMLレスポンス
    ユーザー->>ブラウザ: 認証情報入力
    ブラウザ->>フロントエンド: ログインリクエスト
    フロントエンド->>APIゲートウェイ: 認証API呼び出し
    APIゲートウェイ->>認証サービス: 認証処理
    認証サービス->>ユーザーサービス: ユーザー情報取得
    ユーザーサービス->>キャッシュ: キャッシュ確認
    キャッシュ-->>ユーザーサービス: キャッシュなし
    ユーザーサービス->>データベース: ユーザークエリ
    データベース-->>ユーザーサービス: ユーザーデータ
    ユーザーサービス->>キャッシュ: キャッシュ保存
    ユーザーサービス-->>認証サービス: ユーザー情報
    認証サービス->>認証サービス: パスワード検証
    認証サービス->>認証サービス: トークン生成
    認証サービス->>ログサービス: ログイン履歴記録
    認証サービス->>通知サービス: ログイン通知送信
    認証サービス-->>APIゲートウェイ: トークン返却
    APIゲートウェイ-->>フロントエンド: 認証レスポンス
    フロントエンド-->>ブラウザ: トークン保存
    ブラウザ-->>ユーザー: ダッシュボード表示
\`\`\`

### ガントチャート

\`\`\`mermaid
gantt
    title プロジェクトスケジュール
    dateFormat YYYY-MM-DD
    section 設計
    要件定義     :a1, 2024-01-01, 7d
    基本設計     :a2, after a1, 10d
    section 開発
    フロントエンド :b1, after a2, 14d
    バックエンド   :b2, after a2, 14d
    section テスト
    統合テスト    :c1, after b1, 5d
\`\`\`

## その他の要素

- 箇条書き1
- 箇条書き2
  - ネストされた項目
  - もう一つ

1. 番号付きリスト
2. 二つ目

> これは引用です

**太字** と *斜体* のテキスト
`
